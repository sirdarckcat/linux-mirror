name: Sync

on:
  schedule:
    - cron: '17/30 * * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    env:
      LINUX_REPOSITORY: sirdarckcat/linux-1
      BUCKET_NAME: linux-mirror-db
      DB_NAME: mirror.sl3
      URL_PREFIX: mirror-chunk-
      # 10MB = 10 * 1024 * 1024 = 10485760
      SERVER_CHUNK_SIZE: 10485760
      SUFFIX_LENGTH: 3

    steps:
      - uses: actions/checkout@v2
        with:
          repository: '${{ env.LINUX_REPOSITORY }}'
          fetch-depth: 0
          path: ./linux-repo

      - name: Create raw TSVs
        working-directory: ./linux-repo
        run: |
          git log --all --format=format:'%H%x09%(trailers:key=Fixes,separator=%x09,valueonly=true)' > ./fixes_raw.tsv
          git log --all --format=format:'%H%x09%(trailers:key=Reported-by,separator=%x09,valueonly=true)' | grep syzkaller > ./reported_by_raw.tsv
          git name-rev --tags --all | sed s/\ /$'\t'/g > ./tags_raw.tsv
          git log --all --all-match -E --grep='\b[0-9a-f]{40}\b' --grep=pstream | grep '[0-9a-f]\{40\}' | grep '^commit \|Upstream commit\|commit.*upstream' | sed 's/\(\s*\).*\([0-9a-f]\{40\}\).*/\1\2/' | sed ':a;N;$!ba;s/\n \+/\t/g' > ./upstream_raw.tsv

      - name: Create valid CSVs
        working-directory: ./linux-repo
        run: |
          jq --raw-output --raw-input --slurp '["commit","fixes"],(.|split("\n")|.[]|split("\t")|.[0] as $commit|.[1:][]|[$commit,.])|@csv' ./fixes_raw.tsv > ./fixes.csv
          jq --raw-output --raw-input --slurp '["commit","reported_by"],(.|split("\n")|.[]|split("\t")|.[0] as $commit|.[1:][]|select(contains("syzkaller"))|[$commit,.])|@csv' ./reported_by_raw.tsv > ./reported_by.csv
          jq --raw-output --raw-input --slurp '["commit","tags"],(.|split("\n")|.[]|split("\t")|.[0] as $commit|.[1:][]|[$commit,.])|@csv' ./tags_raw.tsv > ./tags.csv
          jq --raw-output --raw-input --slurp '["commit","upstream"],(.|split("\n")|.[]|split("\t")|.[0] as $commit|.[1:][]|[$commit,.])|@csv' ./upstream_raw.tsv > ./upstream.csv

      - uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/799795028847/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'github@sdcpocs.iam.gserviceaccount.com'
          token_format: 'access_token'

      - uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          destination: '${{ env.BUCKET_NAME }}'
          parent: false
          path: 'linux-repo'
          glob: '*.csv'

      - name: Recreate SQLite3 DB
        working-directory: ./linux-repo
        run: |
          sudo apt update && sudo apt install sqlite3
          rm -f mirror.sl3
          sqlite3 mirror.sl3 '.mode csv' '.import fixes.csv fixes'
          sqlite3 mirror.sl3 '.mode csv' '.import reported_by.csv reported_by'
          sqlite3 mirror.sl3 '.mode csv' '.import tags.csv tags'
          sqlite3 mirror.sl3 '.mode csv' '.import upstream.csv upstream'
          sqlite3 mirror.sl3 'CREATE INDEX fixes_commit ON fixes (`commit`,`fixes`);'
          sqlite3 mirror.sl3 'CREATE INDEX fixes_fixes ON fixes (`fixes`,`commit`);'
          sqlite3 mirror.sl3 'CREATE INDEX reported_by_commit ON reported_by (`commit`,`reported_by`);'
          sqlite3 mirror.sl3 'CREATE INDEX tags_commit ON tags (`commit`,`tags`);'
          sqlite3 mirror.sl3 'CREATE INDEX upstream_commit ON upstream (`commit`,`upstream`);'
          sqlite3 mirror.sl3 'CREATE INDEX upstream_upstream ON upstream (`upstream`,`commit`);'
          sqlite3 mirror.sl3 'pragma journal_mode = delete; pragma page_size = 1024; vacuum;'

      - id: 'upload-db'
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          parent: false
          path: 'linux-repo/${{ env.DB_NAME }}'
          destination: '${{ env.BUCKET_NAME }}'

      - id: 'split-db'
        working-directory: ./linux-repo
        run: |
          databaseLengthBytes="$(stat --printf="%s" "${DB_NAME}")"
          requestChunkSize="$(sqlite3 "${DB_NAME}" 'pragma page_size')"
          rm -f ${URL_PREFIX}*
          split "${DB_NAME}" --bytes=${SERVER_CHUNK_SIZE} --suffix-length=${SUFFIX_LENGTH} --numeric-suffixes ${URL_PREFIX}
          echo "::set-output name=requestChunkSize::${requestChunkSize}"
          echo "::set-output name=databaseLengthBytes::${databaseLengthBytes}"

      - id: 'upload-db-chunks'
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          destination: '${{ env.BUCKET_NAME }}'
          parent: false
          path: 'linux-repo'
          glob: '${{ env.URL_PREFIX }}*'

      - uses: actions/checkout@v2
        with:
          path: ./linux-mirror

      - name: "Update config"
        working-directory: ./linux-mirror
        env:
          requestChunkSize: '${{ steps.split-db.outputs.requestChunkSize }}'
          databaseLengthBytes: '${{ steps.split-db.outputs.databaseLengthBytes }}'
          uploadedPath: 'https://storage.googleapis.com/${{ env.BUCKET_NAME }}/${{ env.URL_PREFIX }}'
        run: |
          echo '{
              "serverMode": "chunked",
              "requestChunkSize": '${requestChunkSize}',
              "databaseLengthBytes": '${databaseLengthBytes}',
              "serverChunkSize": '${SERVER_CHUNK_SIZE}',
              "urlPrefix": "'${uploadedPath}'",
              "suffixLength": '${SUFFIX_LENGTH}'
          }' | tee "dist/config.json"

      - name: Rebuild website
        working-directory: ./linux-mirror
        run: |
          npm install
          ./node_modules/.bin/webpack
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add dist
          git commit -m '[automatic] update website' || true
          git push
